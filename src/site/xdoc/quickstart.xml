<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Quickstart</title>
		<author email="francois-xavier.bonnet@centraliens.net">Francois-Xavier Bonnet</author>
	</properties>
	<body>
	<h1>Quickstart</h1>
		Imagine you have to write a java application (master) that must
		include
		a block coming from
		an existing application (provider).
		<section name="Download ESIGate">
			<p>
				Download the last version from SourceForge site. Any library
				needed
				in included inside
				the distribution.
				Copy esigate.jar
				and the
				other libraries inside the WEB-INF/lib folder of
				your web
				application.
	</p>
		</section>
		<section name="Configure it">
			<p>
				The tool try to load its configuration file from the classpath.
				Copy the exemple file from folder
				test/master/WEB-INF/classes/esigate.properties
				into your source folder	in esigate.properties.
				Change the
				"remoteUrlBase" parameter to the base address of your
				provider
				application.
	</p>
<source>
default.remoteUrlBase=http://localhost:8080/provider/
</source>
		</section>
		<section name="Tag the block on the provider application">
			<p>
				The block has to be tagged using special HTML comments.
	</p>
<source>
Some HTML
<strong>&lt;!--$beginblock$myblock$--&gt;</strong>
	My block HTML content
<strong>&lt;!--$endblock$myblock$--&gt;</strong>
Some other HTML
</source>
		</section>
		<section
			name="Retrieve the block inside a page of the master application
		">
			<p>
				If using JSP, you can use the tag library. If not, the tool can be
				used as well directly using java code.
	</p>
			<p>
				Suppose the block you want to include is inside a page
				http://localhost:8080/provider/mypage.php
	</p>
<source>
&lt;?xml version="1.0" encoding="ISO-8859-1" ?&gt;
&lt;%@page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%&gt;
<strong>&lt;%@taglib uri="http://www.esigate.org" prefix="w"%&gt;</strong>
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" /&gt;
&lt;title&gt;Include block exemple&lt;/title&gt;
&lt;/head&gt;
&lt;body style="background-color: yellow"&gt;
...
<strong>&lt;w:includeblock page="mypage.php" name="myblock" /&gt;</strong>
...
&lt;/body&gt;
&lt;/html&gt;
</source>
			<p>
				NOTE: do not forget to add the taglib declaration at the beging of
				the page.
	</p>
		</section>
		<section name="Handling resources">
			<p>
				The HTML code included may contain links to resources (images,
				css,
				scripts, links). In order to have this links
				work, there are two
				possibilities :
	</p>
			<ul>
				<li>adding a HTML &lt;base&gt; tag in the page : you can use the tag &lt;assemble:includeBase&gt;</li>
		<li>have the resources proxied by the reverse proxy servlet</li>
	</ul>
	</section>
	<section name="Template ESIGate application">
	<p>esigate-war is a template war. It has no configuration and a single default provider named 'esigate', mapped on webapp root.</p>
	<ul><li>You must add a configuration file (see <a href="configuration.html">Configuration</a>)</li>
	<li>and update web.xml if necessary.</li></ul> <p>  Then it can be installed on any Java application server. </p>
	
	</section>
	<section name="Development server">
	<p>We provide a stand-alone server for testing and development purposes. It uses esigate-war as-is and takes a configuration file path as parameter :</p>
	<ul>
	<li>Get the jar from the maven repository : <a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22esigate-server%22">esigate-server on central repository</a></li>
	<li>Create a configuration file (see <a href="configuration.html">Configuration</a>)</li>
	<li>Start the server using <b>java -Djetty.port=8080 -Desigate.conf=&lt;your-conf-file&gt; esigate-server-&lt;version&gt;.jar</b></li>
	<li>Stop the server using <b>Control-C</b></li>
	</ul>
	</section>
	</body>
</document>