<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Aggregator</title>
		<author email="francois-xavier.bonnet@centraliens.net">Francois-Xavier Bonnet</author>
	</properties>
	<body>
	<h1>Aggregator</h1>
		<section name="Goals">
			<p>
				Like the reverse proxy servlet, the aggregator is implemented as a
				servlet.
				In addition to reverse proxying the pages, it parses the
				HTML
				code to
				find include directives to process.
		</p>
		</section>
		<section name="Other advantages">
			<ul>
				<li>The toolkit is deployed on a separate web application</li>
				<li>Aggregated applications do not have any dependency on
					the toolkit, they just have to insert include directives in the
					pages</li>
				<li>Include directives are not intrusive, they are html
					comments and do not have any impact on pages</li>
				<li>Aggregated applications are not necessarily written
					in
					Java</li>
			</ul>
		</section>
		<section name="Configuration">
			<p>
				Target applications configuration is achieved through the usual
				driver.properties file. See configuration chapter for more details.
				Eg for 2 applications:
		</p>
<source>
# Common settings
uriEncoding=UTF-8

# Settings for default application
default.remoteUrlBase=http://localhost:8080/esigate-app-aggregated1/

# Settings for aggregated2 application
aggregated2.remoteUrlBase=http://localhost:8080/esigate-app-aggregated2/
</source>
			<p>
				The aggregator is a servlet that has to be configured in the
				web.xml
				file.
		</p>
<source>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd"&gt;
&lt;web-app&gt;
	&lt;servlet&gt;
		&lt;servlet-name&gt;aggregator1&lt;/servlet-name&gt;
		&lt;servlet-class&gt;org.esigate.servlet.AggregatorServlet&lt;/servlet-class&gt;
	&lt;/servlet&gt;
	&lt;servlet&gt;
		&lt;servlet-name&gt;aggregator2&lt;/servlet-name&gt;
		&lt;servlet-class&gt;org.esigate.servlet.AggregatorServlet&lt;/servlet-class&gt;
		&lt;init-param&gt;
			&lt;param-name&gt;provider&lt;/param-name&gt;
			&lt;param-value&gt;aggregated2&lt;/param-value&gt;
		&lt;/init-param&gt;
	&lt;/servlet&gt;
	&lt;servlet-mapping&gt;
		&lt;servlet-name&gt;aggregator1&lt;/servlet-name&gt;
		&lt;url-pattern&gt;/*&lt;/url-pattern&gt;
	&lt;/servlet-mapping&gt;
	&lt;servlet-mapping&gt;
		&lt;servlet-name&gt;aggregator2&lt;/servlet-name&gt;
		&lt;url-pattern&gt;/ag2/*&lt;/url-pattern&gt;
	&lt;/servlet-mapping&gt;
&lt;/web-app&gt;
</source>
		</section>
		<section name="Syntax">
			<subsection name="Defining a block">
				<p>Use the "beginblock" and "endblock" directives with the name
					of
					the block.</p>
<source>
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" /&gt;
&lt;title&gt;Page containing blocks&lt;/title&gt;
&lt;/head&gt;
&lt;body style="background-color: aqua"&gt;
&lt;div&gt;Begin page&lt;/div&gt;
&lt;div style="border: 1px solid red"&gt;

<strong>&lt;!--$beginblock$myblock$--&gt;</strong>
	&lt;div style="background-color: aqua"&gt;
	This is a block from aggregated2
	&lt;/div&gt;
<strong>&lt;!--$endblock$myblock$--&gt;</strong>
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</source>
			</subsection>
			<subsection name="Including a block">
				<p>Use the "includeblock" directives with the name of the
					provider,
					the page and the name of the block to retrieve. If no
					block
					name, the
					complete page is retrieved.</p>
<source>
&lt;?xml version="1.0" encoding="ISO-8859-1" ?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" /&gt;
&lt;title&gt;Block example&lt;/title&gt;
&lt;/head&gt;
&lt;body style="background-color: yellow"&gt;
Page from aggregated1
&lt;br /&gt;
<strong>&lt;!--$includeblock$aggregated2$block.html$myblock$--&gt;</strong>
This content will be replaced by the block "myblock"
<strong>&lt;!--$endincludeblock$--&gt;</strong>
&lt;/body&gt;
&lt;/html&gt;
</source>
            </subsection>

            <subsection name="Including a block with variables">
                <p>
                    Page accept variables $(variable_name) that will be resolved from vars.properties. This file is descripted in <a href="configuration.html#Variables_resolver">Configuration</a> page.
                </p>
                in vars.properties :
<source>
myblock=block.html
myattributid=789
</source>

<source>
<strong>&lt;!--$includeblock$aggregated2$$(myblock)$myblock$--&gt;</strong>
This content will be replaced by the block "myblock" from block.html
<strong>&lt;!--$endincludeblock$--&gt;</strong>
&lt;/body&gt;
&lt;/html&gt;
</source>

                or

<source>
<strong>&lt;!--$includeblock$aggregated2$block.html?id=$(myattributid)$myblock$--&gt;</strong>
This content will be replaced by the block "myblock" from block.html?id=789
<strong>&lt;!--$endincludeblock$--&gt;</strong>
&lt;/body&gt;
&lt;/html&gt;
</source>





		</subsection>
		<subsection name="Including page via &lt;esi:include&gt; directive">
				<p>Use
					the "&lt;esi:include&gt;" directive to include complete page into aggregated output. Directive supports following attributes:
			</p>
				<ul>
					<li>src - specifies page and provider which should be used for retrieving (in a "$PROVIDER({'provider-id'})/)/page" format)</li>
				</ul>
		</subsection>
		<subsection name="Processing &lt;!--esi --&gt; comments">
			<p>
				Aggregator supports processing of esi-style comments (normal comments with 'esi' added: '&lt;!--esi').
				If esi-style comment is encountered in aggregtion page then comment definition is stripped and data inside comment is processed as usual data.
			</p>
		</subsection>
		<subsection name="Defining a template">
			<p>
				Use the "begintemplate" and "endtemplate" directives with the name of the template. Use the "beginparam" and "endparam" directives to delimit params (variable parts that can be replaced inside the template)
			</p>
<source>
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" /&gt;
<strong>&lt;!--$beginparam$title$--&gt;</strong>&lt;title&gt;Title to be replaced&lt;/title&gt;<strong>&lt;!--$endparam$title$--&gt;</strong>
&lt;/head&gt;
&lt;body style="background-color: aqua"&gt;
Template from aggregated2
<strong>&lt;!--$beginparam$content$--&gt;</strong>Block to be replaced<strong>&lt;!--$endparam$content$--&gt;</strong>
&lt;/body&gt;
&lt;/html&gt;
</source>
		</subsection>
		<subsection name="Including a template">
			<p>
				Use the "includetemplate" directives with the name of the provider, the page and the name of the template to retrieve. If no template name, the complete page is retrieved.
				Use directives "beginput" and "endput" to replace params inside the template.
			</p>
<source>
<strong>&lt;!--$includetemplate$aggregated2$template.html$--&gt;</strong>&#160;
<strong>&lt;!--$beginput$title$--&gt;</strong>&lt;title&gt;Template exemple&lt;/title&gt;<strong>&lt;!--$endput$--&gt;</strong>&#160;
<strong>&lt;!--$beginput$content$--&gt;</strong>
&lt;div style="background-color: yellow"&gt;
Some text from aggregated1
&lt;/div&gt;
<strong>&lt;!--$endput$--&gt;</strong>&#160;
<strong>&lt;!--$endincludetemplate$--&gt;</strong>
</source>
		</subsection>

            <subsection name="Including a template with variables">
                <p>
                    Page accept variables $(variable_name) that will be resolved from vars.properties. This file is descripted in <a href="configuration.html#Variables_resolver">Configuration</a> page.
                </p>
                in vars.properties :
<source>mytemplate=template.html</source>
<source>
<strong>&lt;!--$includetemplate$aggregated2$$(mytemplate)$--&gt;</strong>&#160;
<strong>&lt;!--$beginput$title$--&gt;</strong>&lt;title&gt;Template exemple&lt;/title&gt;<strong>&lt;!--$endput$--&gt;</strong>&#160;
<strong>&lt;!--$beginput$content$--&gt;</strong>
&lt;div style="background-color: yellow"&gt;
Some text from aggregated1
&lt;/div&gt;
<strong>&lt;!--$endput$--&gt;</strong>&#160;
<strong>&lt;!--$endincludetemplate$--&gt;</strong>
</source>

            </subsection>
        </section>
    </body>
</document>