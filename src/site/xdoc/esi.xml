<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Edge Side Include</title>
		<author email="francois-xavier.bonnet@centraliens.net">Francois-Xavier Bonnet</author>
	</properties>
	<body>
		<h1>Edge Side Include</h1>
	<p>
		EsiGate fully implements
		<a href="http://www.w3.org/TR/esi-lang">ESI 1.0 Language Specification 1.0</a>
		and adds also a few extra (but useful) features. Here is the reference list of all supported tags,
		attributes and variable expressions.
	</p>
	<section name="&lt;esi:include&gt;">
		<p>
			This tag specifies to include some part of another
			web page. Here is basic example:
		</p>
		<source>&lt;esi:include src="$(PROVIDER{cms})/news" fragment="news_1"/&gt;</source>
		<p>
			This tag has several other attributes that enable to have
			a precise control on what you want to retrieve from the page,
			transform, cache, handle errors... See the reference table bellow for
			details.
		</p>
	</section>
	<section name="&lt;esi:replace&gt;">
		<p>
			This tag can be used only nested inside an include tag
			and is used to specifies things to replace inside the included
			fragment.
		</p>
		<source>&lt;esi:include src="..."&gt;
    &lt;esi:replace fragment="my_fragment"&gt; Replacement text&lt;/esi:replace&gt;
&lt;/esi:include&gt;</source>
		<p>
			This tag has several other attributes that enable to have
			a precise control on what you want to retrieve from the page,
			transform, cache, handle errors... See the reference table
			bellow for details.
		</p>
	</section>
	<section name="&lt;esi:fragment&gt;">
		<p>
			Delimits a fragment inside a page. This fragment could be
			fetched or retrieved by another page.
		</p>
		<source>&lt;esi:fragment name="my_fragment"&gt;
   Content of the fragment
&lt;/esi:fragment&gt;</source>
	</section>
	<section name="&lt;esi:try&gt; &lt;esi:attempt&gt; &lt;esi:except&gt;">
		<p>
			Enables to handle http errors like 404 or 500.
		</p>
		<source>&lt;esi:try&gt;
   &lt;esi:attempt&gt; ... &lt;/esi:attempt&gt;
   &lt;esi:except code="500"&gt; ... &lt;/esi:except&gt;
&lt;/esi:try&gt;</source>
	</section>
	<section name="&lt;esi:choose&gt; &lt;esi:when&gt; &lt;esi:otherwise&gt;">
		<p>
			Defines conditional structures.
		</p>
		<source>&lt;esi:choose&gt;
   &lt;esi:when test="..."&gt; ... &lt;/esi:when&gt;
   &lt;esi:when test="..."&gt; ... &lt;/esi:when&gt;
   &lt;esi:otherwise&gt; ... &lt;/esi:otherwise&gt;
&lt;/esi:choose&gt;</source>
	</section>
	<section name="&lt;esi:inline&gt;">
		<p>
			Defines fragments that will be stored separately in the
			cache in order to be reused later.
			See
			<a href="http://www.w3.org/TR/esi-lang">ESI 1.0
				Language Specification 1.0
			</a>
			for details.
		</p>
	</section>
	<section name="&lt;esi:comment&gt;">
		<p>
			A comment that appears in the source code of the page but
			will be removed after ESI processing.
		</p>
		<source>&lt;esi:comment text="This comment will not be sent to the client" /&gt;</source>
	</section>
	<section name="&lt;esi:remove&gt;">
		<p>
			Almost like comment tag. The html nested inside remove
			tag will be visible inside the page before processing but will be
			removed by the processing. This tag is very useful for example when you
			are using a page as a template and you want to see it with sample
			contents when it has not been ESI-processed.
		</p>
		<source>&lt;esi:remove&gt;
   &lt;strong&gt;This is a sample text that will be removed&lt;/strong&gt;
&lt;/esi:remove&gt;</source>
	</section>
	<section name="&lt;!--esi --&gt;">
		<p>
			Exactly the opposite of remove tag. Before ESI processing
			the content of the tag will be seen by the browser as an html comment
			but after inclusion the tag itself will be removed and the content will
			become visible.
		</p>
		<source>&lt;!--esi
   &lt;strong&gt;This page has been processed by an ESI processor!&lt;/strong&gt;
--&gt;</source>
	</section>
	<section name="&lt;esi:vars&gt;">
		<p>
			Some variable expressions can be used inside esi tag
			attribute values. With this tag you can use expressions anywhere in
			your page, you just have to put a vars tag around the part of the page
			that may contain expressions.
		</p>
		<source>&lt;esi:vars&gt;
   The user-agent of your browser is: $(HTTP_USER_AGENT)
&lt;/esi:vars&gt;</source>
	</section>
<h1>Tag reference</h1>
<table>
<tr>
<th>Tag</th>
<th>Attribute</th>
<th>Usage</th>
<th>Examples</th>
<th>ESI 1.0</th>
<th>EsiGate</th>
</tr>
<tr>
<td>&lt;esi:include&gt;</td>
<td></td>
<td>Include a part of another page or the complete page</td>
<td>&lt;esi:include src="URI" /&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>src</td>
<td>Url of the page to include</td>
<td>&lt;esi:include src=" $(PROVIDER...)URI" /&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>fragment</td>
<td>Name of the fragment to retrieve</td>
<td>&lt;esi:include src="URI" fragment="NAME" /&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>alt</td>
<td>Alternative if src cannot be fetched</td>
<td>&lt;esi:include src="URI" alt="URI" /&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>onerror</td>
<td>If "continue" the processor will ignore if an error
occurs (http code &gt; 400). If "display" will display the error page
retrieved.</td>
<td>&lt;esi:include src="URI" onerror="display" /&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>rewriteabsoluteurl</td>
<td>Parle the included ressource for URLs and rewrite
them with the current URL of the page</td>
<td>&lt;esi:include src="URI" rewriteabsoluteurl="true"
/&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>ttl</td>
<td>Time the ressource can be stored in the cache</td>
<td>&lt;esi:include src="" ttl="1h" /&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>maxwait</td>
<td>Max time to wait for the ressource to load</td>
<td>&lt;esi:include src="" maxwait="2000" /&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>no-store</td>
<td>tells the processor not to store the ressource in
cache</td>
<td>&lt;esi:include src="" no-store="on" /&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>stylesheet</td>
<td>xsl stylesheet to apply to the ressource (works
with xml and html, stylesheet should be searched first as a local
resource and only if not found, on the remote server)</td>
<td>&lt;esi:include src="a.html"
stylesheet="s.xsl"&gt;...&lt;/esi:include&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>xpath</td>
<td>xpath expression to retrieve</td>
<td>&lt;esi:include src="..." xpath="..." /&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:replace&gt;</td>
<td></td>
<td>Replace some part of the included ressource</td>
<td></td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>fragment</td>
<td>Name of the fragment to replace</td>
<td>&lt;esi:replace
fragment="NAME"&gt;...&lt;/esi:replace&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>expression</td>
<td>Regular expression to replace. For details about
regular expression syntax see
http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html</td>
<td>&lt;esi:replace
expression="$(HTTP_HOST)"&gt;www.my_host.com&lt;/esi:replace&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:fragment&gt;</td>
<td></td>
<td>Delimits a fragment</td>
<td>&lt;esi:fragment name="my_fragment"/&gt;</td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>name</td>
<td>name of the fragment</td>
<td></td>
<td>No</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:try&gt;</td>
<td></td>
<td>Try block</td>
<td>&lt;esi:try&gt;&lt;esi:attempt&gt;...&lt;/esi:attempt&gt;&lt;esi:except
code="404"&gt;...&lt;/esi:except&gt;&lt;esi:except
code="500"&gt;...&lt;/esi:except&gt;&lt;esi:except&gt;...&lt;/esi:except&gt;&lt;:esi:try&gt;
</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:attempt&gt;</td>
<td></td>
<td>The part to try to execute</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:except&gt;</td>
<td></td>
<td>A block that will replace the attempt block in case
an exception occurs</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>code</td>
<td>Http return code that trigger this except block</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:choose&gt;</td>
<td></td>
<td>Conditional block</td>
<td>&lt;esi:choose&gt; &lt;esi:when test="..."&gt; ...
&lt;/esi:when&gt; &lt;esi:when test="..."&gt; ... &lt;/esi:when&gt;
&lt;esi:otherwise&gt; ... &lt;/esi:otherwise&gt; &lt;/esi:choose&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:when&gt;</td>
<td></td>
<td>Condition</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>test</td>
<td>Expression to evaluate</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:otherwise&gt;</td>
<td></td>
<td>Fallback if none of the previous conditions has
been fullfilled</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:inline&gt;</td>
<td></td>
<td>An fragment that will be stored independently in
the cache and fetched</td>
<td>&lt;esi:inline name="URI" fetchable="{yes
no}"&gt;...&lt;/esi:inline&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>name</td>
<td>name of the fragment</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td></td>
<td>fetchable</td>
<td>Whether the fragment is independantly fetchable by
name or not.</td>
<td></td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:comment&gt;</td>
<td></td>
<td>A comment that will be removed by the processor</td>
<td>&lt;esi:comment text="..." /&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:remove&gt;</td>
<td></td>
<td>A page fragment that will be removed by the
processor</td>
<td>&lt;esi:remove&gt; ... &lt;/esi:remove&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;!--esi--&gt;</td>
<td></td>
<td>A html-commented fragment that will be uncommented
by the processor</td>
<td>&lt;!--esi ...--&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
<tr>
<td>&lt;esi:vars&gt;</td>
<td></td>
<td>Delimits a fragment that may contain expressions to
evaluate</td>
<td>&lt;esi:vars&gt; ... &lt;/esi:vars&gt;</td>
<td>yes</td>
<td>yes</td>
</tr>
</table>

<h1>Variable reference</h1>
<table>
<tr>
<th>Variable Name</th>
<th>Type</th>
<th>Example</th>
<th>ESI 1.0</th>
</tr>
<tr>
<td>HTTP_ACCEPT_LANGUAGE</td>
<td>list</td>
<td>da, en-gb, en</td>
<td>yes</td>
</tr>
<tr>
<td>HTTP_COOKIE</td>
<td>dictionary</td>
<td>id=571; visits=42</td>
<td>yes</td>
</tr>
<tr>
<td>HTTP_HOST</td>
<td>String</td>
<td>esi.xyz.com</td>
<td>yes</td>
</tr>
<tr>
<td>HTTP_REFERER</td>
<td>String</td>
<td>http://roberts.xyz.com/</td>
<td>yes</td>
</tr>
<tr>
<td>HTTP_USER_AGENT</td>
<td>dictionary</td>
<td>Mozilla; MSIE 5.5</td>
<td>yes</td>
</tr>
<tr>
<td>QUERY_STRING</td>
<td>dictionary</td>
<td>first=Robin&amp;last=Roberts</td>
<td>yes</td>
</tr>
<tr>
<td>PROVIDER</td>
<td>dictionary</td>
<td>http://provider.com</td>
<td>No</td>
</tr>
</table>
		<p>
			For the complete list of
			variable and expressions that can be used, see §4 in the
			<a href="http://www.w3.org/TR/esi-lang">ESI 1.0 Language
				Specification 1.0
			</a>
			Note: the expression "PROVIDER" is a specific EsiGate
			expression useful to externalize the base Url of provider applications
			inside the configuration file. All the other expressions supported by
			EsiGate are the ones defined inside the specification.
		</p>
	</body>
</document>