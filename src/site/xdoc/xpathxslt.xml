<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Xpath and XSLT</title>
		<author email="fxbonnet@users.sourceforge.net">Francois-Xavier Bonnet</author>
	</properties>
	<body>
	<h1>Xpath and XSLT</h1>
		<section name="Xpath and XSLT">
			<p>
				It is possible to extract an Xpath expression from a page or to
				transform it using an XSLT stylesheet. This works even if the page
				is not a well-formed XHTML document.
			</p>
			<p>
				In a JSP, you can use the "include-xml" tag.
			</p>
			<p>
				For other uses, you can use directly the API with
				<a
					href="webassembletool-core/apidocs/net/webassembletool/xml/XpathRenderer.html">XpathRenderer</a>
				and
				<a
					href="webassembletool-core/apidocs/net/webassembletool/xml/XsltRenderer.html">XsltRenderer</a>
				classes.
				Example:
<source>
package net.webassembletool.aggregator;

import java.io.IOException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.webassembletool.DriverFactory;
import net.webassembletool.HttpErrorPage;
import net.webassembletool.xml.XsltRenderer;

/**
 * This servlet retrieves pages from a provider and transforms them using an xsl
 * stylesheet.
 */
public class TransformingServlet extends HttpServlet {
	private String provider;

	@Override
	protected void service(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		String relUrl = request.getRequestURI();
		relUrl = relUrl.substring(request.getContextPath().length());
		if (request.getServletPath() != null) {
			relUrl = relUrl.substring(request.getServletPath().length());
		}
		try {
			DriverFactory.getInstance(provider).proxy(relUrl, request,
					response, new XsltRenderer("/stylesheet.xsl"));
		} catch (HttpErrorPage e) {
			throw new ServletException(e);
		}
	}

	@Override
	public void init(ServletConfig config) throws ServletException {
		provider = config.getInitParameter("provider");
	}
}
</source>
			</p>
		</section>
	</body>
</document>