<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Configuration</title>
		<author email="francois-xavier.bonnet@centraliens.net">Francois-Xavier Bonnet</author>
	</properties>
	<body>
		<h1>Configuration</h1>
		<section name="Configuration file">
			<p>
				The tools default behavior is to load a configuration file from
				the
				classpath org/esigate/driver.properties
	</p>
			<p>
				Alternatively you can use method
				<code>org.esigate.DriverFactory.configure(Properties)
				</code>
				.
			</p>
		</section>
		<section name="Configuration directives">
			<table>
				<tr>
					<th>Directive</th>
					<th>Usage</th>
					<th>Mandatory</th>
					<th>Default value</th>
				</tr>
				<tr>
					<td>remoteUrlBase</td>
					<td>
						Base URL of the remote application. Eg:
						<code>remoteUrlBase=http://localhost:8080/provider/
						</code>
						If not defined, local file system will be used (see localBase
						directive). When <a href="clustering.html">clustering</a> (remote application runs on several servers), use a coma-separated list.
					</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>uriEncoding</td>
					<td>Charset used for encoding parameters in URI</td>
					<td>No</td>
					<td>ISO-8859-1</td>
				</tr>
				<tr>
					<td>maxConnectionsPerHost</td>
					<td>Maximum number of HTTP connections simultaneously
						opened
						with this application</td>
					<td>No</td>
					<td>20</td>
				</tr>
                <tr>
                    <td>parsableContentTypes</td>
                    <td>List of parsable content types.  By default, parsable content types are text/html and application/xhtml+xml.  
                    Use this syntax to set content types :                   
                    <code>parsableContentTypes=text/html,application/xhtml+xml,text/plain</code>                    
                    </td>
                    <td>No</td>
                    <td>text/html,application/xhtml+xml</td>
                </tr>
                <tr>
                    <td><strike>blackListedHeaders</strike></td>
                    <td><b>Deprecated property.</b> Comma separated list of HTTP request or response headers which will not be forwarded from server to client or from client
                    to server. Use forwardRequestHeaders, discardRequestHeaders, forwardResponseHeaders, discardResponseHeaders instead.
                    </td>
                    <td>No</td>
                    <td></td>
                </tr>
                <tr>
                    <td>discardRequestHeaders</td>
                    <td>Comma separated list of HTTP request headers which will not be forwarded from client
                    to server. By default, any other request header will be forwarded.
                    See <a href="httpheaders.html">HTTP headers support</a> for more details.
                    </td>
                    <td>No</td>
                    <td>Authorization,Connection,Content-Length,Cookie,Expect,Host,Max-Forwards,Proxy-Authorization,TE,Trailer,Transfer-Encoding,Upgrade</td>
                </tr>
                <tr>
                    <td>forwardRequestHeaders</td>
                    <td>Comma separated list of HTTP request headers which are discarded by default but have to be forwarded from client
                    to server.
                    See <a href="httpheaders.html">HTTP headers support</a> for more details.
                    </td>
                    <td>No</td>
                    <td></td>
                </tr>
                <tr>
                    <td>discardResponseHeaders</td>
                    <td>Comma separated list of HTTP request headers which will not be forwarded from server
                    to client . By default, any other response header will be forwarded.
                    See <a href="httpheaders.html">HTTP headers support</a> for more details.
                    </td>
                    <td>No</td>
                    <td>Connection,Content-Encoding,Content-Length,Content-Location,Content-MD5,Keep-Alive,Location,Proxy-Authenticate,Set-Cookie,Trailer,Transfer-Encoding,WWW-Authenticate</td>
                </tr>
                <tr>
                    <td>forwardResponseHeaders</td>
                    <td>Comma separated list of HTTP response headers which are discarded by default but have to be forwarded from server
                    to client.
                    See <a href="httpheaders.html">HTTP headers support</a> for more details.
                    </td>
                    <td>No</td>
                    <td></td>
                </tr>
                <tr>
                    <td><strike>timeout</strike></td>
                    <td><b>Deprecated property.</b> Defines timeout while establishing a connection with the server (connect time out)
                    and timeout waiting for data (socket timeout) if appropriate properties aren't defined.
                    In case when 'connectTimeout' property isn't defined then connect timeout is equal to the value of that property.
                    In case when 'socketTimeout' property isn't defined then socket timeout is equal to the ten (10x) values of that property.
                    </td>
                    <td>No</td>
                    <td>1000</td>
                </tr>
                <tr>
                    <td>connectTimeout</td>
                    <td>Defines timeout while establishing a connection with the server (connect time out).
                    In case when 'connectTimeout' property isn't defined then 'timeout' property value may be used instead.
                    </td>
                    <td>No</td>
                    <td>1000</td>
                </tr>
                <tr>
                    <td>socketTimeout</td>
                    <td>Defines timeout waiting for data (socket timeout) after connection to the server has been opened.
                    In case when 'socketTimeout' property isn't defined then ten (10x) values of 'timeout' property may be used instead.
                    </td>
                    <td>No</td>
                    <td>10000</td>
                </tr>
				<tr>
					<td>useCache</td>
					<td>
						Use OsCache to reuse downloaded resources. Additional parameters
						can be set using oscache.properties file (see
						<a href="http://www.opensymphony.com/oscache/wiki/Configuration.html">OsCache documentation</a>
						)
					</td>
					<td>No</td>
					<td>true</td>
				</tr>
				<tr>
					<td>cacheRefreshDelay</td>
					<td>Time to live (seconds) of any cached page. If 0, cache entries will
						never expire</td>
					<td>No</td>
					<td>0</td>
				</tr>
				<tr>
					<td>cacheMaxFileSize</td>
					<td>Maximum size of a cache entry (bytes). If 0, no size limit.
						This
						directive can be used to avoid excessive memory usage</td>
					<td>No</td>
					<td>0</td>
				</tr>
				<tr>
					<td>cacheStorageClassName</td>
					<td>Implementation of org.esigate.cache.CacheStorage to use</td>
					<td>No</td>
					<td>org.esigate.cache.DefaultCacheStorage</td>
				</tr>
				<tr>
					<td>localBase</td>
					<td>File system path where to retrieve a resource if it cannot
						be retrieved neither from the remote server nor from the cache.
						This directive is particularly useful for developers to make mock
						applications. For each file in the folder, you can simulate HTTP
						headers in an additional header file (same file name with .header
						extension)</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>putInCache</td>
					<td>The tool can automatically store a copy of any downloaded
						resource to the file system. These files will then be used if the
						application is not available</td>
					<td>No</td>
					<td>false</td>
				</tr>
				<tr>
					<td>proxyHost</td>
					<td>Proxy host name or IP. The tool can work through an HTTP
						proxy server.</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>proxyPort</td>
					<td>Proxy port</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>proxyUser</td>
					<td>Username used by the driver for proxy authentication. Leave blank if no authentication is required by the proxy.</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>proxyPassword</td>
					<td>Proxy password</td>
					<td>No</td>
					<td>-</td>
				</tr>
                <tr>
                    <td>filterJsessionid</td>
                    <td>Instructs driver to replace all <code>jsessionid</code>
                        occurencies inside generated URL's with correct ones retrived from remote site</td>
                    <td>No</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>preserveHost</td>
                    <td>Instructs send the request to the target server with the same Host header value as in the incoming request.
                    This feature is very usefull when the target server uses virtual hosts.</td>
                    <td>No</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>cookieStore</td>
                    <td>The cookieStore to use. Must be a class that implements org.esigate.cookie.CustomCookieStore</td>
                    <td>No</td>
                    <td>org.esigate.cookie.SerializableBasicCookieStore</td>
                </tr>
                <tr>
                    <td>authenticationHandler</td>
                    <td>The <a href="authentication.html">authenticationHandler</a> to use. Must be a class that implements org.esigate.authentication.AuthenticationHandler</td>
                    <td>No</td>
                    <td>org.esigate.authentication.RemoteUserAuthenticationHandler</td>
                </tr> 
				<tr>
                    <td>filter</td>
                    <td>The request filter to use. Must be a class that implements org.esigate.filter.Filter</td>
                    <td>No</td>
                    <td></td>
                </tr>   
				<tr>
                    <td>fixResources</td>
                    <td>Fix links to resources, images and pages in the pages retrieved (parse the pages to find &lt;a href=...&gt; or &lt;img src=...&gt; ...)</td>
                    <td>No</td>
                    <td>false</td>
                </tr>   
				<tr>
                    <td>fixMode</td>
                    <td>If "relative" the generated URLs will be relative to the root of the server (ie starting with "/"). If "absolute" generated URLs will be absolute (ie starting with "http://")</td>
                    <td>No</td>
                    <td>relative</td>
                </tr>   
				<tr>
                    <td>visibleUrlBase</td>
                    <td>The base URL to use while rewriting URLs for links or resources if different from remoteUrlBase</td>
                    <td>No</td>
                    <td>same value as remoteUrlBase</td>
                </tr>
				<tr>
					<td>remoteUrlBaseStrategy</td>
					<td>
						The strategy to use if load balancing (ie remoteUrlBase has been
						defined as a comma-separated list). Value can be "roundrobin",
						"iphash" or "stickysession". See
						<a href="clustering.html">clustering</a>
						for details
					</td>
					<td>No</td>
					<td>roundrobin</td>
				</tr>
			</table>

		</section>
		<section name="Specifying several provider applications">
			<p>
				You can specify several provider applications prefixing directives
				with the provider name.
				Eg for 3 applications, the first one is the
				default applications, the other ones are called "appli1" and
				"appli2":
			</p>
<source>
remoteUrlBase=http://localhost:8080/appli0/

appli1.remoteUrlBase=http://localhost:8080/appli1/
appli1.uriEncoding=UTF-8

appli2.remoteUrlBase=http://localhost:8080/appli2/
appli2.uriEncoding=UTF-8
</source>
		</section>

                <section name="Variables resolver">
			<p>
				You can define variables in
				classpath org/esigate/vars.properties
                                </p>
<source>
variable_name=variable_value
someUrl=/cms/article123
</source>
                                <p>
                                Those variables can be used in page attribute of <a href="taglib.html">tags</a> includeBlock,includeTemplate and includeBase or in <a href="aggregator.html#Including_a_block">aggregator</a>.
                                The syntax for using a variable is $(variable_name) and is fixed by the standard <a href="http://www.w3.org/TR/esi-lang">ESI</a>.
                                </p>
                                                       

		</section>

	</body>
</document>