<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Configuration</title>
		<author email="fxbonnet@users.sourceforge.net">Francois-Xavier Bonnet</author>
	</properties>
	<body>
		<section name="Configuration file">
			<p>
				The tools default behavior is to load a configuration file from
				the
				classpath net/webassembletool/driver.properties
	</p>
			<p>
				Alternatively you can use method
				<code>net.webassembletool.DriverFactory.configure(Properties)
				</code>
				.
			</p>
		</section>
		<section name="Configuration directives">
			<table>
				<tr>
					<th>Directive</th>
					<th>Usage</th>
					<th>Mandatory</th>
					<th>Default value</th>
				</tr>
				<tr>
					<td>remoteUrlBase</td>
					<td>
						Base URL of the remote application. Eg:
						<code>remoteUrlBase=http://localhost:8080/provider/
						</code>
						If not defined, local file system will be used (see localBase
						directive)
					</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>uriEncoding</td>
					<td>Charset used for encoding parameters in URI</td>
					<td>No</td>
					<td>ISO-8859-1</td>
				</tr>
				<tr>
					<td>maxConnectionsPerHost</td>
					<td>Maximum number of HTTP connections simultaneously
						opened
						with this application</td>
					<td>No</td>
					<td>20</td>
				</tr>
				<tr>
					<td>timeout</td>
					<td>Timeout while establishing a connection with the server
						(connect time out) or while waiting for data (socket timeout)
						</td>
					<td>No</td>
					<td>1000</td>
				</tr>
				<tr>
					<td>useCache</td>
					<td>
						Use OsCache to reuse downloaded resources. Additional parameters
						can be set using oscache.properties file (see
						<a href="http://www.opensymphony.com/oscache/wiki/Configuration.html">OsCache documentation</a>
						)
					</td>
					<td>No</td>
					<td>true</td>
				</tr>
				<tr>
					<td>cacheRefreshDelay</td>
					<td>Time to live (seconds) of any cached page. If 0, cache entries will
						never expire</td>
					<td>No</td>
					<td>0</td>
				</tr>
				<tr>
					<td>cacheMaxFileSize</td>
					<td>Maximum size of a cache entry (bytes). If 0, no size limit.
						This
						directive can be used to avoid excessive memory usage</td>
					<td>No</td>
					<td>0</td>
				</tr>
				<tr>
					<td>localBase</td>
					<td>File system path where to retrieve a resource if it cannot
						be retrieved neither from the remote server nor from the cache.
						This directive is particularly useful for developers to make mock
						applications. For each file in the folder, you can simulate HTTP
						headers in an additional header file (same file name with .header
						extension)</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>putInCache</td>
					<td>The tool can automatically store a copy of any downloaded
						resource to the file system. These files will then be used if the
						application is not available</td>
					<td>No</td>
					<td>false</td>
				</tr>
				<tr>
					<td>proxyHost</td>
					<td>Proxy host name or IP. The tool can work through an HTTP
						proxy server.</td>
					<td>No</td>
					<td>-</td>
				</tr>
				<tr>
					<td>proxyPort</td>
					<td>Proxy port</td>
					<td>No</td>
					<td>-</td>
				</tr>
                <tr>
                    <td>filterJsessionid</td>
                    <td>Instructs driver to replace all <code>jsessionid</code>
                        occurencies inside generated URL's with correct ones retrived from remote site</td>
                    <td>No</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>preserveHost</td>
                    <td>Instructs send the request to the target server with the same Host header value as in the incoming request.
                    This feature is very usefull when the target server uses virtual hosts.</td>
                    <td>No</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>cookieStore</td>
                    <td>The cookieStore to use. Must be a class that implements net.webassembletool.cookie.CustomCookieStore</td>
                    <td>No</td>
                    <td>net.webassembletool.cookie.SerializableBasicCookieStore</td>
                </tr>
                <tr>
                    <td>authenticationHandler</td>
                    <td>The <a href="authentication.html">authenticationHandler</a> to use. Must be a class that implements net.webassembletool.authentication.AuthenticationHandler</td>
                    <td>No</td>
                    <td>net.webassembletool.authentication.RemoteUserAuthenticationHandler</td>
                </tr> 
				<tr>
                    <td>filter</td>
                    <td>The request filter to use. Must be a class that implements net.webassembletool.filter.Filter</td>
                    <td>No</td>
                    <td></td>
                </tr>   
			</table>

		</section>
		<section name="Specifying several provider applications">
			<p>
				You can specify several provider applications prefixing directives
				with the provider name.
				Eg for 3 applications, the first one is the
				default applications, the other ones are called "appli1" and
				"appli2":
			</p>
<source>
remoteUrlBase=http://localhost:8080/appli0/

appli1.remoteUrlBase=http://localhost:8080/appli1/
appli1.uriEncoding=UTF-8

appli2.remoteUrlBase=http://localhost:8080/appli2/
appli2.uriEncoding=UTF-8
</source>
		</section>

                <section name="Variables resolver">
			<p>
				You can define variables in
				classpath net/webassembletool/vars.properties
                                </p>
<source>
variable_name=variable_value
someUrl=/cms/article123
</source>
                                <p>
                                Those variables can be used in page attribute of <a href="taglib.html">tags</a> includeBlock,includeTemplate and includeBase or in <a href="aggregator.html#Including_a_block">aggregator</a>.
                                The syntax for using a variable is $(variable_name) and is fixed by the standard <a href="http://www.w3.org/TR/esi-lang">ESI</a>.
                                </p>
                                                       

		</section>

	</body>
</document>