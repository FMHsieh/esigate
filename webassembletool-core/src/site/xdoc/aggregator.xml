<?xml version="1.0" encoding="UTF-8"?>
<document>
	<properties>
		<title>Aggregator</title>
		<author email="francois-xavier.bonnet@smile.fr">Francois-Xavier Bonnet</author>
	</properties>
	<body>
		<section name="Goals">
			<p>
				Like the reverse proxy servlet, the aggregator is implemented as a
				servlet.
				In addition to reverse proxying the pages, it parses the
				HTML
				code to
				find include directives to process.
		</p>
		</section>
		<section name="Other advantages">
			<ul>
				<li>The toolkit is deployed on a separate web application</li>
				<li>Aggregated applications do not have any dependency on
					the toolkit, they just have to insert include directives in the
					pages</li>
				<li>Include directives are not intrusive, they are html
					comments and do not have any impact on pages</li>
				<li>Aggregated applications are not necessarily written
					in
					Java</li>
			</ul>
		</section>
		<section name="Configuration">
			<p>
				Target applications configuration is achieved through the usual
				driver.properties file. See configuration chapter for more details.
				Eg for 2 applications:
		</p>
			<img src="aggregator_conf.jpg" />
			<p>
				The aggregator is a servlet that has to be configured in the
				web.xml
				file.
		</p>
			<img src="aggregator.jpg" />
		</section>
		<section name="Syntax">
			<subsection name="Defining a block">
				<p>Use the "beginblock" and "endblock" directives with the name
					of
					the block.</p>
				<img src="aggregator_block.jpg" />
			</subsection>
			<subsection name="Including a block">
				<p>Use the "includeblock" directives with the name of the
					provider,
					the page and the name of the block to retrieve. If no
					block
					name, the
					complete page is retrieved.</p>
				<img src="aggregator_includeblock.jpg" />
			</subsection>
			<subsection name="Including page via &lt;esi:include&gt; directive">
				<p>Use
					the "&lt;esi:include&gt;" directive to include complete page into aggregated output. Directive supports following attributes:
			</p>
				<ul>
					<li>src - specifies page and provider which should be used for retrieving (in a "$PROVIDER({'provider-id'})/)/page" format)</li>
				</ul>
		</subsection>
		<subsection name="Processing &lt;!--esi --&gt; comments">
			<p>
				Aggregator supports processing of esi-style comments (normal comments with 'esi' added: '&lt;!--esi').
				If esi-style comment is encountered in aggregtion page then comment definition is stripped and data inside comment is processed as usual data.
			</p>
		</subsection>
		<subsection name="Defining a template">
			<p>
				Use the "begintemplate" and "endtemplate" directives with the name of the template. Use the "beginparam" and "endparam" directives to delimit params (variable parts that can be replaced inside the template)
			</p>
			<img src="aggregator_template.jpg" />
		</subsection>
		<subsection name="Including a block">
			<p>
				Use the "includetemplate" directives with the name of the provider, the page and the name of the template to retrieve. If no template name, the complete page is retrieved.
				Use directives "beginput" and "endput" to replace params inside the template.
			</p>
			<img src="aggregator_includetemplate.jpg" />
		</subsection>
	</section>
	</body>
</document>